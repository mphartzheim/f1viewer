name: Build & Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write  # Needed for GitHub Releases

jobs:
  build:
    name: Build and Package for All Platforms
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install Linux build dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y libgtk-3-dev libgl1-mesa-dev xorg-dev

      - name: Install Fyne CLI (Linux only)
        if: runner.os == 'Linux'
        run: |
          go install fyne.io/fyne/v2/cmd/fyne@v2.5.5
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Install AppImage tool (Linux only)
        if: runner.os == 'Linux'
        run: |
          wget https://github.com/AppImage/AppImageKit/releases/download/13/appimagetool-x86_64.AppImage -O appimagetool
          chmod +x appimagetool
          sudo mv appimagetool /usr/local/bin/

      - name: Tidy modules
        run: go mod tidy

      - name: Build application
        run: |
          mkdir -p dist
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            go build -o dist/f1viewer-windows.exe .
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            go build -o dist/f1viewer-macos .
          else
            fyne package -os linux -icon assets/tray_icon.png -appID com.github.mphartzheim.f1viewer -release
            echo "Exit code: $?"
            find . -name "*.AppImage" -exec mv {} dist/f1viewer-linux.AppImage \; || echo "AppImage not found"
          fi
          echo "Build directory contents:"
          ls -lh dist/
        shell: bash

      - name: Zip binaries
        run: |
          cd dist
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            7z a f1viewer-windows.zip f1viewer-windows.exe
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            zip f1viewer-macos.zip f1viewer-macos
          fi
        shell: bash

      - name: Prepare GitHub Release body
        run: |
          if [ ! -d .github ]; then mkdir .github; fi
          echo "## ðŸ“¢ Release Notes" > .github/release-body.md
          cat RELEASENOTES.md >> .github/release-body.md
          echo -e "\n---\n" >> .github/release-body.md
          echo "## ðŸ“˜ Changelog" >> .github/release-body.md
          cat CHANGELOG.md >> .github/release-body.md
        shell: bash

      - name: Upload release (Windows)
        if: runner.os == 'Windows'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/f1viewer-windows.zip
          body_path: .github/release-body.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release (macOS)
        if: runner.os == 'macOS'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/f1viewer-macos.zip
          body_path: .github/release-body.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release (Linux)
        if: runner.os == 'Linux'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/f1viewer-linux.AppImage
          body_path: .github/release-body.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
